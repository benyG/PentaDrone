## -- Copyright (c) Charlie Howard 2016-2021 All rights reserved


function New-FirefoxExtension {
	[cmdletBinding()]
	Param(
			[Parameter(Mandatory)]
			[string[]]$ExtensionUri,
			[Parameter(Mandatory)]
			[String]$ExtensionPath,
			[Parameter(Mandatory = $false)]
			[ValidateSet('HKCU', 'HKLM')]
			[string]$Hive
	)
	If (!(Test-Path $ExtensionPath)) {
			New-Item -ItemType Directory $ExtensionPath | Out-Null
	}
	Foreach ($Uri in $ExtensionUri) {
			#Store just the extension filename for later use
			#Thanks reddit user /u/ta11ow for the regex help!
			$Uri -match '(?<=/)(?<ExtensionName>[^/]+)(?=\?)'
			$Extension = $matches['ExtensionName']
			#Download the Extension and save it to the FireFoxExtensions folder
			Invoke-WebRequest -Uri $Uri -OutFile "C:\FirefoxExtensions\$Extension"
			#Now we have to manipulate the extension into the form that Mozilla dictates
			#Create a zip file from the xpi
			Get-ChildItem -Path $ExtensionPath | Foreach-Object { $NewName = $_.FullName -replace ".xpi", ".zip"
					Copy-Item -Path $_.FullName -Destination $NewName }
			#Depending on PS Version, expand the zip file
			If ($PSVersionTable.PSVersion.Major -ge 4) {
					Expand-Archive -Path (Get-ChildItem $ExtensionPath |
									Where-Object { $_.Extension -eq '.zip'} |
									Select-Object -ExpandProperty FullName) -DestinationPath $ExtensionPath
			}
			Else {
					[System.IO.Compression.ZipFile]::ExtractToDirectory((Get-ChildItem $ExtensionPath |
											Where-Object { $_.Extension -eq '.zip'} |
											Select-Object -ExpandProperty FullName), $ExtensionPath)
			}
			#convert the manifest file into a psobject
			$file = Get-Content "$ExtensionPath\manifest.json" | ConvertFrom-Json
			#store the author id
			$authorValue = $file.applications.gecko.id
			Rename-Item -Path $ExtensionPath\$($matches['ExtensionName']) -NewName "$authorValue.xpi"
			#Cleanup all the junk, leaving only the extension pack file behind
			Remove-Item -Path $ExtensionPath -Exclude *.xpi -Recurse -Force
			#Modify registry based on which Hive you selected
			Switch ($Hive) {
					'HKCU' {
							Switch ([environment]::Is64BitOperatingSystem) {
									$true {
											If (!(Test-Path "C:\Program Files\Mozilla Firefox\firefox.exe")) {
													New-Item -Path HKCU:\Software\Wow6432Node\Mozilla\Firefox\Extensions -Force
													$regKey = "HKCU:\Software\Wow6432Node\Mozilla\Firefox\Extensions"
													Set-ItemProperty -Path $regKey -Name $authorValue -Value "$ExtensionPath\$authorValue.xpi" -Force
											}
											Else {
													New-Item -Path HKCU:\Software\Mozilla\Firefox\Extensions -Force
													$regKey = "HKCU:\Software\Mozilla\Firefox\Extensions"
													Set-ItemProperty -Path $regKey -Name $authorValue -Value "$ExtensionPath\$authorValue.xpi" -Force
											}
									}
									$false {
											New-Item -Path HKCU:\Software\Mozilla\Firefox\Extensions -Force
											$regKey = "HKCU:\Software\Mozilla\Firefox\Extensions"
											Set-ItemProperty -Path $regKey -Name $authorValue -Value "$ExtensionPath\$authorValue.xpi" -Force
									}
							}#hkcu switch
					}#hkcu

					'HKLM' {
							Switch ([environment]::Is64BitOperatingSystem) {
									$true {
											If (Test-Path "C:\Program Files\Mozilla Firefox\firefox.exe") {
													New-Item -Path HKLM:\Software\Mozilla\Firefox\Extensions -Force
													$regKey = "HKLM:\Software\Mozilla\Firefox\Extensions"
													Set-ItemProperty -Path $regKey -Name $authorValue -Value "$ExtensionPath\$authorValue.xpi"  -Force
											}
											Else {
													New-Item -Path HKLM:\Software\Wow6432Node\Mozilla\Firefox\Extensions -Force
													$regKey = "HKLM:\Software\Wow6432Node\Mozilla\Firefox\Extensions"
													New-ItemProperty -Path $regKey -Name $authorValue -Value "$ExtensionPath\$authorValue.xpi" -Force
											}
									}
									$false {
											New-Item -Path HKLM:\Software\Mozilla\Firefox\Extensions -Force
											$regKey = "HKLM:\Software\Mozilla\Firefox\Extensions"
											Set-ItemProperty -Path $regKey -Name $matches['ExtensionName'] -Value "$ExtensionPath\$($matches['ExtensionName'])" -Force
									}
							}#hklm switch
					}#hklm
			}#end outer switch
	}#foreach
}#function